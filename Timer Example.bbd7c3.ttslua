--Runs when bags spawn in when the map is loaded
function onLoad()
    --Creates the button
    self.createButton({
        label="Timer\nExample", click_function="buttonClick",
        function_owner=self, position={0.8,0.1,0},
        height=500, width=700, font_size=150
    })
    --Creates a variable we use to track if the timer is currently running
    timerIsRunning = false
    --Set the object's color to green
    self.setColorTint({0,1,0})
end

--This runs when the button on this object is clicked
function buttonClick()
    --This check will determine if the timer has started yet, preventing overlap
    if timerIsRunning == true then
        --Displays an error message on screen
        broadcastToAll("Timer is already running.", {1,1,1})
    else
        --These are the parameters we will feed to the timer to start it
        local params = {
            --This is the "name" of the timer.
            --It must be unique, no other variable anywhere can have its name
            --To ensure this, I attach this object's GUID to that name
            identifier = "aUniqueTimerName"..self.getGUID(),
            --The name of the function the timer activates when it hits 0
            function_name = "timerRunsOut",
            --Where that function can be found
            function_owner = self,
            --How long, in seconds, the timer will run
            delay = 3
        }
        --Using those params to the timer creation to start the clock
        Timer.create(params)
        --Activating our variable which tracks if the timer is running
        timerIsRunning = true
        --Change the object's color to red
        self.setColorTint({1,0,0})
    end
end

--This runs after the timer has run
function timerRunsOut()
    --As good practice, I always "delete" the timer.
    --This shouldn't be necessary, but currently it can help avoid some bugs
    Timer.destroy("aUniqueTimerName"..self.getGUID())
    --We turn timerIsRunning back off
    timerIsRunning = false
    --And change the color back to green
    self.setColorTint({0,1,0})
    --Broadcast "Ding"
    broadcastToAll("Ding!", {0,1,0})
end