--Runs when bags spawn in when the map is loaded
function onLoad()
    --Creates the 2 buttons
    self.createButton({
        label="Roll 1d6\nExample", click_function="buttonClick1",
        function_owner=self, position={0.8,0.1,-0.4},
        height=300, width=700, font_size=100
    })
    self.createButton({
        label="Roll 4d6\nExample", click_function="buttonClick2",
        function_owner=self, position={0.8,0.1,0.4},
        height=300, width=700, font_size=100
    })
    --Setting the random seed
    math.randomseed(os.time())
    --[[Important randomseed note:
        Randomseed is the source of our random numbers.
        It determines what numbers will be produced by math.random().
        If we didn't set a seed, it would produce numbers in a set pattern.

        We will further randomize the numbers when the buttons are clicked. ]]
end

--This runs when the button 1 on this object is clicked
function buttonClick1()
    --We run this first to get a chance at updating our random seed
    --This is another function we will create to do this
    updateRandomSeed()
    --Then we get our random number from the range of 1 to 6.
    --If we didn't put 1,6 in the (),
        --it would give a random number in the range of 0-1 using decimals
    local randomNumber = math.random(1,6)
    --We broadcast the random number
    broadcastToAll("Rolled: "..randomNumber, {0,1,0})
end

--This runs when the button 2 on this object is clicked
function buttonClick2()
    --Just like button 1 we will add the possibility to update the seed
    updateRandomSeed()
    --But now, we need to get 4 random numbers. We will put them into a table.
    local rNumTable = {}
    --For loop that runs the code in it 4 times
    for i=1, 4 do
        --This adds an entry to randomNumberTable with math.random's result
        table.insert(rNumTable, math.random(1,6))
    end
    --Now we make the string using those results
    local numString = rNumTable[1]..", "..rNumTable[2]..", "..rNumTable[3]..", "..rNumTable[4]
    --We didn't NEED to put these into a table. We could have made the string
    --directly in the for loop.. But having them in this table allows you to
    --add them or do other manipulation as needed.

    --We broadcast the string we made
    broadcastToAll("Rolled: "..numString, {0,1,0})
end


--This has a 1/10 chance of creating a new random seed based on current time
function updateRandomSeed()
    --We want this to have a 1/10 chance, so we'll get a random number 1-10
    local chance = math.random(1,10)
    --If it is 1, then we will update the seed
    if chance == 1 then
        math.randomseed(os.time())
    end
end