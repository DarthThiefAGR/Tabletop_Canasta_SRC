function recoger_mesa()

  -- Objetos de la mesa
  objetos_mesa = getAllObjects()
  Nobjetos = #objetos_mesa

  objetos_a_agrupar = {}
  objetos_colocados = {}

  -- Posición de zona del mazo de robo
  Z_mazo_robo   = getObjectFromGUID(Z_mazo_robo_GUID)
  pos_mazo_robo = Z_mazo_robo.getPosition()
  rot_mazo_robo = Z_mazo_robo.getRotation()
  -- Volteamos
  rot_mazo_robo = {rot_mazo_robo[1], rot_mazo_robo[2], 180 }

  -- Posición de zona del mazo de ocultas
  Z_ocultas              = getObjectFromGUID(Z_marcador_ocultas_GUID)
  pos_mazo_ocultas       = Z_ocultas.getPosition()
  rot_mazo_ocultas       = Z_ocultas.getRotation()
  -- Volteamos
  rot_mazo_ocultas = {rot_mazo_ocultas[1], rot_mazo_ocultas[2], 0 }

  -- Posición de zona del mazo de ocultas apoyadas
  Z_ocultas_apoyo        = getObjectFromGUID(Z_marcador_ocultas_apoyo_GUID)
  pos_mazo_ocultas_apoyo = Z_ocultas_apoyo.getPosition()
  rot_mazo_ocultas_apoyo = Z_ocultas_apoyo.getRotation()
  -- Volteamos
  rot_mazo_ocultas_apoyo = {rot_mazo_ocultas_apoyo[1], rot_mazo_ocultas_apoyo[2], 0 }

  -- Zona AUXILIAR
  Z_auxiliar_01 = getObjectFromGUID(Z_auxiliar_01_GUID)
  Z_auxiliar_01_pos = Z_auxiliar_01.getPosition()
  Z_auxiliar_01_rot = Z_auxiliar_01.getRotation()

  -- Vemos cuantas cartas hay en sus posiciones correctas
  OBJ_mazo_robo     =  Z_mazo_robo.getObjects()
  OBJ_ocultas       =  Z_ocultas.getObjects()
  OBJ_ocultas_apoyo =  Z_ocultas_apoyo.getObjects()

  N_OBJ_mazo_robo     = #OBJ_mazo_robo
  N_OBJ_ocultas       = #OBJ_ocultas
  N_OBJ_ocultas_apoyo = #OBJ_ocultas_apoyo

  -- Manos de jugadores
  mano_1_E1 = Jugador_1_E1.getHandObjects()
  mano_2_E1 = Jugador_2_E1.getHandObjects()
  mano_1_E2 = Jugador_1_E2.getHandObjects()
  mano_2_E2 = Jugador_2_E2.getHandObjects()

  N_mano_1_E1 = #mano_1_E1
  N_mano_2_E1 = #mano_2_E1
  N_mano_1_E2 = #mano_1_E2
  N_mano_2_E2 = #mano_2_E2

  print('N_mano_1_E1 = ',N_mano_1_E1)
  print('N_mano_2_E1 = ',N_mano_2_E1)
  print('N_mano_1_E2 = ',N_mano_1_E2)
  print('N_mano_2_E2 = ',N_mano_2_E2)

  if N_OBJ_mazo_robo ~= 0 then
    OBJ_mazo_robo_name = OBJ_mazo_robo[1].name
    if OBJ_mazo_robo_name == 'Deck' then
      DECK_mazo_robo     = OBJ_mazo_robo[1].getObjects()
      N_CARD_mazo_robo = #DECK_mazo_robo
    else
      N_CARD_mazo_robo = 1
    end
  else
    N_CARD_mazo_robo = 0
  end

  if N_OBJ_ocultas ~= 0 then
    OBJ_ocultas_name = OBJ_ocultas[1].name
    if OBJ_ocultas_name == 'Deck' then
      DECK_ocultas       = OBJ_ocultas[1].getObjects()
      N_CARD_ocultas = #DECK_ocultas
    else
      N_CARD_ocultas = 1
    end
  else
    N_CARD_ocultas = 0
  end

  if N_OBJ_ocultas_apoyo ~= 0 then
    OBJ_ocultas_apoyo_name = OBJ_ocultas_apoyo[1].name
    if OBJ_ocultas_apoyo_name == 'Deck' then
      CARD_ocultas_apoyo = OBJ_ocultas_apoyo[1].getObjects()
      N_CARD_ocultas_apoyo = #CARD_ocultas_apoyo
    else
      N_CARD_ocultas_apoyo = 1
    end
  else
    N_CARD_ocultas_apoyo = 0
  end

  print('N_CARD_mazo_robo = ',N_CARD_mazo_robo)
  print('N_CARD_ocultas = ',N_CARD_ocultas)
  print('N_CARD_ocultas_apoyo = ',N_CARD_ocultas_apoyo)


  -- Condición para poder recoger - 1 mano vacia
  Cond_Manos = N_mano_1_E1*N_mano_2_E1*N_mano_1_E2*N_mano_2_E2

  if (N_CARD_mazo_robo ~= 108 or N_CARD_ocultas ~= 4
      or N_CARD_ocultas_apoyo ~= 4) and Cond_Manos == 0 then

      printToAll('Ordenando mesa',{1,0,0})

      kk  = 1
      kkC1 = 1
      kkC2 = 1
      kkC3 = 1

      -- Encontrar/Localizar cartas / mazos a colocar en su sitio
      for k = 1,Nobjetos do
        objeto_nombre = objetos_mesa[k].name
        objeto_location = objetos_mesa[k].getPosition()

        if objeto_nombre == 'Card' or objeto_nombre == 'CardCustom' or objeto_nombre == 'Deck' then

          -- Localizamos objetos que ya están en su sitio
          x_obj = objeto_location[1]
          y_obj = objeto_location[2]
          z_obj = objeto_location[3]

          -- Mazo de robo
          cond1X = x_obj >= (pos_mazo_robo[1] - 0.1) and x_obj <= (pos_mazo_robo[1] + 0.1)
          cond1Z = z_obj >= (pos_mazo_robo[3] - 0.1) and z_obj <= (pos_mazo_robo[3] + 0.1)
          -- Mazo de marcadores de ocultas
          cond2X = x_obj >= (pos_mazo_ocultas[1] - 0.1) and x_obj <= (pos_mazo_ocultas[1] + 0.1)
          cond2Z = z_obj >= (pos_mazo_ocultas[3] - 0.1) and z_obj <= (pos_mazo_ocultas[3] + 0.1)
          -- Mazo de marcadores de ocultas apoyadas
          cond3X = x_obj >= (pos_mazo_ocultas_apoyo[1] - 0.1) and x_obj <= (pos_mazo_ocultas_apoyo[1] + 0.1)
          cond3Z = z_obj >= (pos_mazo_ocultas_apoyo[3] - 0.1) and z_obj <= (pos_mazo_ocultas_apoyo[3] + 0.1)

          if cond1X and cond1Z then
            objetos_colocados[kkC1] = k
            kkC1 = kkC1 + 1
          elseif cond2X and cond2Z then
            objetos_colocados[kkC2] = k
            kkC2 = kkC2 + 1
          elseif cond3X and cond3Z then
            objetos_colocados[kkC3] = k
            kkC3 = kkC3 + 1
          else
            objetos_a_agrupar[kk] = k
            kk = kk + 1
          end

        end
      end

      -- print('kk = ',kk-1)
      -- print('kkC1 = ',kkC1-1)
      -- print('kkC2 = ',kkC2-1)
      -- print('kkC3 = ',kkC3-1)


      -- Conteo de cartas actual
      Cont_Robo         = N_CARD_mazo_robo
      Cont_Ocultas      = N_CARD_ocultas
      Cont_Ocultas_Apoy = N_CARD_ocultas_apoyo


      -- Recorremos objetos encontrados que no están colocados
      for i = 1,(kk-1) do

        objeto = objetos_mesa[objetos_a_agrupar[i]]
        objeto_nombre = objeto.name

        -- Objeto encontrado tipo Mazo -> Coger cartas
        if objeto_nombre == 'Deck' then

          mazo    = objeto.getObjects()
          Ncartas = #mazo
          objeto.setLock(false)

          for j = 1,Ncartas do

            carta_name = mazo[j].name

            if carta_name == 'Oculta' then
              if Cont_Ocultas == 0 then
                param = {position = pos_mazo_ocultas,
                         rotation = rot_mazo_ocultas,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton_vacio(obj,pos_mazo_ocultas,rot_mazo_ocultas) end,
                         }
                objeto.takeObject(param)
              else
                param = {position = pos_mazo_ocultas,
                         rotation = rot_mazo_ocultas,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton(obj,OBJ_ocultas[1]) end,
                         }
                objeto.takeObject(param)
              end
              Cont_Ocultas = Cont_Ocultas + 1
            elseif carta_name == 'Oculta Apoyada' then
              if Cont_Ocultas_Apoy == 0 then
                param = {position = pos_mazo_ocultas_apoyo,
                         rotation = rot_mazo_ocultas_apoyo,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton_vacio(obj,pos_mazo_ocultas_apoyo,rot_mazo_ocultas_apoyo) end,
                         }
                objeto.takeObject(param)
              else
                param = {position = pos_mazo_ocultas_apoyo,
                         rotation = rot_mazo_ocultas_apoyo,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton(obj,OBJ_ocultas_apoyo[1]) end,
                         }
                objeto.takeObject(param)
              end

              Cont_Ocultas_Apoy = Cont_Ocultas_Apoy + 1
            else
              if Cont_Robo == 0 then
                param = {position = pos_mazo_robo,
                         rotation = rot_mazo_robo,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton_vacio(obj,pos_mazo_robo,rot_mazo_robo) end,
                         }
                objeto.takeObject(param)
              else
                param = {position = pos_mazo_robo,
                         rotation = rot_mazo_robo,
                         index = 1,
                         callback_function = function(obj) mover_carta_a_monton(obj,OBJ_mazo_robo[1]) end,
                         }
                objeto.takeObject(param)
              end
              Cont_Robo = Cont_Robo + 1
            end

          end

        -- Objeto encontrado tipo Carta
        elseif objeto_nombre == 'Card' or objeto_nombre == 'CardCustom'  then

          carta_name = objeto.getName()

          if carta_name == 'Oculta' then
            objeto.setLock(false)
            if Cont_Ocultas == 0 then
              objeto.setPosition(pos_mazo_ocultas)
              objeto.setRotation(rot_mazo_ocultas)
            else
              mazo = OBJ_ocultas[1]
              mazo.putObject(objeto)
            end
            Cont_Ocultas = Cont_Ocultas + 1

          elseif carta_name == 'Oculta Apoyada' then
            objeto.setLock(false)
            if Cont_Ocultas_Apoy == 0 then
              objeto.setPosition(pos_mazo_ocultas_apoyo)
              objeto.setRotation(rot_mazo_ocultas_apoyo)
            else
              mazo = OBJ_ocultas_apoyo[1]
              mazo.putObject(objeto)
            end
            Cont_Ocultas_Apoy = Cont_Ocultas_Apoy + 1

          else
            objeto.setLock(false)
            if Cont_Robo == 0 then
              objeto.setPosition(pos_mazo_robo)
              objeto.setRotation(rot_mazo_robo)
            else
              mazo = OBJ_mazo_robo[1]
              mazo.putObject(objeto)
            end
            Cont_Robo = Cont_Robo + 1
          end
        end

      end

  elseif N_CARD_mazo_robo == 108 and N_CARD_ocultas == 4 and N_CARD_ocultas_apoyo == 4 then
    printToAll('Mesa ordenada', {0,1,0})
  elseif Cond_Manos ~= 0 then
    printToAll('No se puede recoger la mesa', {1,0,0})
  end


end

function mover_carta_a_monton_vacio(obj,pos,rot)
    obj.setPosition(pos)
    obj.setRotation(rot)
end

function mover_carta_a_monton(obj, mazo)
    mazo.putObject(obj)
end
