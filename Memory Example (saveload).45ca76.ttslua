--Runs any time the board is saved
function onSave()
    --We make a table of data we want to save. WE CAN ONLY SAVE 1 TABLE.
    local data_to_save = {countValue=countValue}
    --We use this command to convert the table into a string
    saved_data = JSON.encode(data_to_save)
    --And this inserts the string into the save information for this script.
    return saved_data
    --Data is now saved.
end

--Runs when the map is first loaded
function onload(saved_data)
    --First we check if there was information saved in this script yet
    if saved_data ~= "" then
        --If there is save data, first we convert the string back to a table
        local loaded_data = JSON.decode(saved_data)
        --Then we pull out data out of the table
        countValue = loaded_data.countValue
    else
        --This is the data that is used if no save exists
        --Think of it as default values
        countValue = 0
    end

    --Creates the 3 buttons, one display, a + and and -
    self.createButton({
        label=tostring(countValue), click_function="none",
        function_owner=self, position={0.8,0.1,-0.4},
        height=300, width=700, font_size=280
    })
    self.createButton({
        label="-", click_function="subFromCount",
        function_owner=self, position={0.4,0.1,0.4},
        height=300, width=320, font_size=280
    })
    self.createButton({
        label="+", click_function="addToCount",
        function_owner=self, position={1.2,0.1,0.4},
        height=300, width=320, font_size=280
    })
end

--This runs when the + button is pressed. It adds 1 to countValue
function addToCount()
    countValue = countValue + 1
    updateDisplay()
end

--This runs when the - button is pressed. It subtracts 1 from countValue
function subFromCount()
    countValue = countValue - 1
    updateDisplay()
end

--Updates the button used as a display to show the value of countValue
function updateDisplay()
    --Index is 0 because the "display" is our first button.
    --We just update the "label" of the button to show the updated countValue
    self.editButton({index=0, label=tostring(countValue)})
end